name: Merge Pull-Request and Deployment

on:
    push:
        branches:
            - master
    workflow_dispatch:

permissions:
    id-token: write
    contents: read

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup .NET core
              uses: actions/setup-dotnet@v4.1.0
              with:
                dotnet-version: "v8.0.x"

            - name: Restore Dependencies
              run: dotnet restore "${{github.workspace}}/src/my-web-app.sln"

            - name: build
              run: dotnet build "${{github.workspace}}/src/my-web-app.sln" --no-restore -- configuration Release

            - name: test
              run: dotnet test "${{github.workspace}}/src/my-web-app.sln" --no-restore -- logger:"junit;LogFilePath=${{github.workspace}}/results/test-files.xml"

            - name: Create Test Summary
              uses: test-summary/action@v2.4
              with:
                paths: ${{github.workspace}}/results/*.xml
                output: ${{github.workspace}}/results/summary.md
                show: "all"
              if: always()

            - name: Add Test Results to Job Summary
              run: |
                echo "Test Results:" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY
                cat "${{github.workspace}}/results/summary.md" >> $GITHUB_STEP_SUMMARY
              if: always()

            - name: Publish
              run: dotnet publish "${{github.workspace}}/src/my-web-app/my-web-app.csproj" -c Release -o mywebapp

            - name: Upload Build Artifact
              uses: actions/upload-artifact@v4
              with:
                name: myapp
                path: mywebapp/**
                if_no_files_found: error

    deploy-to-dev:
        runs-on: ubuntu-latest
        needs: build-and-test
        enviornment:
            name: DEV
            url: 

            steps:
                - name: Download Artifacts
                  uses: actions/download-artifact@v4
                  with:
                    name: myapp
                    path: myapp

                - name: Prove to myself that the files are present
                  run: |
                    ls -la
                    ls -la myapp

                - name: Login to Azure
                  uses: azure/login@v2.2.0
                  with:
                    client-id: ${{secrets.AZURE_CLIENT_ID}}
                    tenant-id: ${{secrets.AZURE_TENANT_ID}}
                    subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

                - name: Deplot to Azure Web App
                  uses: azure/webapps-deploy@v3
                  with:
                    app-name: ${{vars.WEB_APP_NAME}}
                    slot-name: dev
                    package: myapp
                  
    deploy-to-staging:
        runs-on: ubuntu-latest
        needs: deploy-to-dev
        enviornment:
            name: STAGING
            url:

            steps:
                - name: Download Artifacts
                  uses: actions/download-artifact@v4
                  with:
                    name: myapp
                    path: myapp

                - name: Login to Azure
                  uses: azure/login@v2.2.0
                  with:
                    client-id: ${{secrets.AZURE_CLIENT_ID}}
                    tenant-id: ${{secrets.AZURE_TENANT_ID}}
                    subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

                - name: Deplot to Azure Web App
                  uses: azure/webapps-deploy@v3
                  with:
                    app-name: ${{vars.WEB_APP_NAME}}
                    slot-name: staging
                    package: myapp
                  
    deploy-to-production:
        runs-on: ubuntu-latest
        needs: deploy-to-staging
        enviornment:
            name: PRODUCTION
            url:

            steps:
                - name: Download Artifacts
                  uses: actions/download-artifact@v4
                  with:
                    name: myapp
                    path: myapp

                - name: Login to Azure
                  uses: azure/login@v2.2.0
                  with:
                    client-id: ${{secrets.AZURE_CLIENT_ID}}
                    tenant-id: ${{secrets.AZURE_TENANT_ID}}
                    subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

                - name: Deplot to Azure Web App
                  uses: azure/webapps-deploy@v3
                  with:
                    app-name: ${{vars.WEB_APP_NAME}}
                    slot-name: production
                    package: myapp
                  